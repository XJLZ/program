<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!--&lt;!&ndash;把对象的创建交给spring来管理&ndash;&gt;-->
    <!--<bean id="service" class="com.service.Impl.AccountServiceImpl"/>-->
    <context:component-scan base-package="com"></context:component-scan>

    <!--&lt;!&ndash;配置通知bean&ndash;&gt;-->
    <bean id="logger" class="com.util.Logger"></bean>

    <!--&lt;!&ndash;配置aop&ndash;&gt;-->
    <aop:config>
        <!--配置切入点表达式-->
        <aop:pointcut id="pt1" expression="execution(* com.service.Impl.*.*(..))"></aop:pointcut>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--前置通知-->
            <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>
            <!--后置通知-->
            <aop:after method="AfterReturningPrintLog" pointcut-ref="pt1"></aop:after>
            <!--错误通知-->
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>
            <!--最终通知-->
            <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>
             <!--配置环绕通知 详细的注释请看Logger类中-->
            <!--<aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>-->
        </aop:aspect>
    </aop:config>
</beans>